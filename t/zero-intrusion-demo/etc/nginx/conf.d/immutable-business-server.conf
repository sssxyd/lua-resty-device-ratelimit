server {
    listen 8300;
    server_name _;
    root /usr/local/openresty/nginx/html;
    
    charset utf-8;
    index index.php index.html index.htm;

    access_log /var/log/nginx/access.immutable-business-server.log  main;
    error_log /var/log/nginx/error.immutable-business-server.log;

    autoindex off;
    gzip off;

    location /login {
        access_by_lua_block {
            local cjson = require "cjson"

            local args = ngx.req.get_uri_args()
            local userId = args.userId or ""
            if userId == "" then
                ngx.req.read_body()
                args, _ = ngx.req.get_post_args()
                if not args then
                    args = {}
                end
                userId = args.userId or ""
            end

            local response = {
                code = -1000,
                message = "user invalid!"
            }
            if tonumber(userId) > 100 then
                response = {
                    code = 1,
                    message = "",
                    result = {
                        userId = userId,
                        uri = ngx.var.uri,
                        time = ngx.time()
                    }
                }
            end

            ngx.header.content_type = 'application/json; charset=utf-8'
            ngx.say(cjson.encode(response))
            ngx.exit(200)
        }
    }

    location /guest/ {
        access_by_lua_block {
            local cjson = require "cjson"
            local response = {
                uri = ngx.var.uri,
                type = "Guest Interface",
                time = ngx.time()
            }
            ngx.header.content_type = 'application/json; charset=utf-8'
            ngx.say(cjson.encode(response))
            ngx.exit(200)
        }
    }

    location /io/ {
        access_by_lua_block {
            local cjson = require "cjson"
            local response = {
                uri = ngx.var.uri,
                type = "I/O Interface",
                time = ngx.time()
            }
            ngx.header.content_type = 'application/json; charset=utf-8'
            ngx.say(cjson.encode(response))
            ngx.exit(200)
        }
    }

    location /key/ {
        access_by_lua_block {
            local cjson = require "cjson"
            local response = {
                uri = ngx.var.uri,
                type = "Key Business Interface",
                time = ngx.time()
            }
            ngx.header.content_type = 'application/json; charset=utf-8'
            ngx.say(cjson.encode(response))
            ngx.exit(200)
        }
    }

    location / {
        access_by_lua_block {
            local cjson = require "cjson"
            local response = {
                uri = ngx.var.uri,
                type = "Normal Interface",
                time = ngx.time()
            }
            ngx.header.content_type = 'application/json; charset=utf-8'
            ngx.say(cjson.encode(response))
            ngx.exit(200)
        }
    }
}
