server {
    listen  8400;
    server_name  _;
    root  /usr/local/openresty/nginx/html;
    
    charset  utf-8;
    index  index.php index.html index.htm;

    access_log  /var/log/nginx/access.zero-intrusion-ratelimit.log  main;
    error_log  /var/log/nginx/error.zero-intrusion-ratelimit.log;

    autoindex  off; 

    location /check-device-id {
        allow  127.0.0.1;
        deny  all;

        access_by_lua_block {
            local cjson = require("cjson")
            local drl = require("resty.device.ratelimit")
            local secret = "xeej5koo3EeV1Yie"
            
            local response = {
                valid = false,
                expired_seconds = 1800
            }

            ngx.req.read_body()
            local body_data = ngx.req.get_body_data()
            local args, err
            if not body_data then
                err = "failed to read request body"
            else
                args, err = cjson.decode(body_data)
            end
            if not args then
                ngx.log(ngx.ERR, "failed to decode JSON: ", err)
                args = {}
            end

            local encrypted_data_hex = args.device_id or ""
            if encrypted_data_hex ~= "" then
                local datajson = drl.decrypt(encrypted_data_hex, secret)
                if datajson then
                    local data = cjson.decode(datajson)
                    if data then
                        local expired = tonumber(data.expired) or 0
                        local expired_seconds = expired - os.time()
                        if expired_seconds < 0 then
                            response.valid = false
                            response.expired_seconds = 0
                        else
                            response.valid = true
                            response.expired_seconds = expired_seconds
                        end
                    end
                end
            end
            
            ngx.header.content_type = 'application/json; charset=utf-8'
            ngx.say(cjson.encode(response))
            ngx.exit(200)
        }
    }

    location /ajax/login {
        rewrite /ajax/(.*) /$1 break;
        access_by_lua_block {
            local cjson = require("cjson")
            local drl = require("resty.device.ratelimit")
            local secret = "xeej5koo3EeV1Yie"
            
            local res = drl.proxy_pass("http://127.0.0.1:8300")
            
            if res.status ~= 200 then
                ngx.say(res.body)
                ngx.exit(res.status)
            end

            local apiResponse = cjson.decode(res.body)
            if apiResponse and (tonumber(apiResponse.code) or 0) == 1 then
                local result = apiResponse.result
                if result and result.userId then
                    local now = os.date("*t") 
                    local tomorrow_end = os.time({year = now.year, month = now.month, day = now.day + 1, hour = 23, min = 59, sec = 59})
                    local data = {
                        userId = result.userId,
                        expired = tomorrow_end
                    }
                    local deviceId = drl.encrypt(cjson.encode(data), secret)
                    drl.set_response_cookie("deviceId", deviceId, tomorrow_end)
                end
            end
            
            ngx.say(res.body)
            ngx.exit(res.status)
        }
    }
    
    
    location /ajax/guest/ {
        rewrite /ajax/(.*) /$1 break;
        proxy_pass http://127.0.0.1:8300;
    }

    location /ajax/io/ {
        access_by_lua_block {
            local drl = require("resty.device.ratelimit")
            if not drl.check() then
                ngx.exit(401)
            end
            if drl.limit("global_current_uri", 10, 4) then
                ngx.exit(503)
            end
            drl.record()
        }
        rewrite /ajax/(.*) /$1 break;
        proxy_pass http://127.0.0.1:8300;
    }
    
    location /ajax/key/ {
        access_by_lua_block {
            local drl = require("resty.device.ratelimit")
            if not drl.check() then
                ngx.exit(401)
            end
            if drl.limit("device_current_uri", 1, 1) then
                ngx.exit(429)
            end
            drl.record()
        }
        rewrite /ajax/(.*) /$1 break;
        proxy_pass http://127.0.0.1:8300;
    }

    location /ajax/ {
        access_by_lua_block {
            local drl = require("resty.device.ratelimit")
            if not drl.check() then
                ngx.exit(401)
            end
            if drl.limit("device_current_uri", 3, 1) or drl.limit("device_total_uris", 10, 40) then
                ngx.exit(429)
            end
            drl.record()
        }
        rewrite /ajax/(.*) /$1 break;
        proxy_pass http://127.0.0.1:8300;
    }

    location / {
        try_files $uri  $uri/ /index.html;
    }

}
